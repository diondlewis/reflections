How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I was able to quickly see the typo in the second file, without have to guess.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can compare different versions and not repeat something that was in an older version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    With Google Docs the pro is I will never forget to make a commit but the con is
    I am more likely to have a lot of small useless commits.
    With Git my commits will have a purpose but I may forget to make a commit
    or I could wait too long to make a commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Since Git was designed with coding in mind it makes sense that multiple files would rely on each other to work.
    Google Docs seems to have word processing in mind which does not rely on another document to work.

How can you use the commands git log and git diff to view the history of files?

    Git log shows me the different versions of the commits with the IDs. I can then use the IDs from git log
    to see the differences with the Git Diff command.

How might using version control make you more confident to make changes that
could break something?

    Very confident because I don't have to worry about breaking something.

Now that you have your workspace set up, what do you want to try using Git for?

    I guess making commits.
